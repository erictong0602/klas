spring.application.name=KLAS
server.port=8081

spring.kafka.bootstrap-servers=localhost:29092,localhost:39092,localhost:49092

# Consumer group configuration
spring.kafka.consumer.group-id=log-consumer-group

# Offset management
spring.kafka.consumer.auto-offset-reset=earliest

# Manual offset commit for more control over message processing
spring.kafka.consumer.enable-auto-commit=false

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Poll and fetch configuration
# Maximum number of records returned in a single poll
spring.kafka.consumer.max-poll-records=500

# Maximum time between polls (adjust based on processing time)
spring.kafka.consumer.max-poll-interval-ms=300000

# Minimum amount of data to fetch
spring.kafka.consumer.fetch-min-size=1

# Wait time for fetching batches (in ms)
spring.kafka.consumer.fetch-max-wait=500

# Session and heartbeat configuration
# Time to detect consumer failures
spring.kafka.consumer.session-timeout-ms=15000

# Frequency of heartbeats to maintain consumer group membership
spring.kafka.consumer.heartbeat-interval-ms=5000

# Buffering
# 50 MB (max data per fetch request)
spring.kafka.consumer.fetch-max-bytes=52428800

# Logging and monitoring (optional)
logging.level.org.apache.kafka.clients.consumer=INFO

logging.config=classpath:log4j2.xml